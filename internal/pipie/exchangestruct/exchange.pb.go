// Code generated by protoc-gen-go. DO NOT EDIT.
// source: exchange.proto

package exchangestruct

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ExchangeFrame struct {
	// Types that are valid to be assigned to ExchangeBody:
	//	*ExchangeFrame_ChallengeRequest
	//	*ExchangeFrame_Challenge
	//	*ExchangeFrame_ChallengeResponse
	//	*ExchangeFrame_Confirm
	ExchangeBody         isExchangeFrame_ExchangeBody `protobuf_oneof:"exchangeBody"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ExchangeFrame) Reset()         { *m = ExchangeFrame{} }
func (m *ExchangeFrame) String() string { return proto.CompactTextString(m) }
func (*ExchangeFrame) ProtoMessage()    {}
func (*ExchangeFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_exchange_ea5c62a9be27af46, []int{0}
}
func (m *ExchangeFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeFrame.Unmarshal(m, b)
}
func (m *ExchangeFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeFrame.Marshal(b, m, deterministic)
}
func (dst *ExchangeFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeFrame.Merge(dst, src)
}
func (m *ExchangeFrame) XXX_Size() int {
	return xxx_messageInfo_ExchangeFrame.Size(m)
}
func (m *ExchangeFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeFrame.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeFrame proto.InternalMessageInfo

type isExchangeFrame_ExchangeBody interface {
	isExchangeFrame_ExchangeBody()
}

type ExchangeFrame_ChallengeRequest struct {
	ChallengeRequest *ExchangeFrame_ExchangeChallengeRequest `protobuf:"bytes,1,opt,name=ChallengeRequest,oneof"`
}

type ExchangeFrame_Challenge struct {
	Challenge *ExchangeFrame_ExchangeChallenge `protobuf:"bytes,2,opt,name=Challenge,oneof"`
}

type ExchangeFrame_ChallengeResponse struct {
	ChallengeResponse *ExchangeFrame_ExchangeChallengeResponse `protobuf:"bytes,3,opt,name=ChallengeResponse,oneof"`
}

type ExchangeFrame_Confirm struct {
	Confirm *ExchangeFrame_ExchangeConfirm `protobuf:"bytes,4,opt,name=Confirm,oneof"`
}

func (*ExchangeFrame_ChallengeRequest) isExchangeFrame_ExchangeBody() {}

func (*ExchangeFrame_Challenge) isExchangeFrame_ExchangeBody() {}

func (*ExchangeFrame_ChallengeResponse) isExchangeFrame_ExchangeBody() {}

func (*ExchangeFrame_Confirm) isExchangeFrame_ExchangeBody() {}

func (m *ExchangeFrame) GetExchangeBody() isExchangeFrame_ExchangeBody {
	if m != nil {
		return m.ExchangeBody
	}
	return nil
}

func (m *ExchangeFrame) GetChallengeRequest() *ExchangeFrame_ExchangeChallengeRequest {
	if x, ok := m.GetExchangeBody().(*ExchangeFrame_ChallengeRequest); ok {
		return x.ChallengeRequest
	}
	return nil
}

func (m *ExchangeFrame) GetChallenge() *ExchangeFrame_ExchangeChallenge {
	if x, ok := m.GetExchangeBody().(*ExchangeFrame_Challenge); ok {
		return x.Challenge
	}
	return nil
}

func (m *ExchangeFrame) GetChallengeResponse() *ExchangeFrame_ExchangeChallengeResponse {
	if x, ok := m.GetExchangeBody().(*ExchangeFrame_ChallengeResponse); ok {
		return x.ChallengeResponse
	}
	return nil
}

func (m *ExchangeFrame) GetConfirm() *ExchangeFrame_ExchangeConfirm {
	if x, ok := m.GetExchangeBody().(*ExchangeFrame_Confirm); ok {
		return x.Confirm
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExchangeFrame) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ExchangeFrame_OneofMarshaler, _ExchangeFrame_OneofUnmarshaler, _ExchangeFrame_OneofSizer, []interface{}{
		(*ExchangeFrame_ChallengeRequest)(nil),
		(*ExchangeFrame_Challenge)(nil),
		(*ExchangeFrame_ChallengeResponse)(nil),
		(*ExchangeFrame_Confirm)(nil),
	}
}

func _ExchangeFrame_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExchangeFrame)
	// exchangeBody
	switch x := m.ExchangeBody.(type) {
	case *ExchangeFrame_ChallengeRequest:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChallengeRequest); err != nil {
			return err
		}
	case *ExchangeFrame_Challenge:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Challenge); err != nil {
			return err
		}
	case *ExchangeFrame_ChallengeResponse:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChallengeResponse); err != nil {
			return err
		}
	case *ExchangeFrame_Confirm:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Confirm); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ExchangeFrame.ExchangeBody has unexpected type %T", x)
	}
	return nil
}

func _ExchangeFrame_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExchangeFrame)
	switch tag {
	case 1: // exchangeBody.ChallengeRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ExchangeFrame_ExchangeChallengeRequest)
		err := b.DecodeMessage(msg)
		m.ExchangeBody = &ExchangeFrame_ChallengeRequest{msg}
		return true, err
	case 2: // exchangeBody.Challenge
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ExchangeFrame_ExchangeChallenge)
		err := b.DecodeMessage(msg)
		m.ExchangeBody = &ExchangeFrame_Challenge{msg}
		return true, err
	case 3: // exchangeBody.ChallengeResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ExchangeFrame_ExchangeChallengeResponse)
		err := b.DecodeMessage(msg)
		m.ExchangeBody = &ExchangeFrame_ChallengeResponse{msg}
		return true, err
	case 4: // exchangeBody.Confirm
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ExchangeFrame_ExchangeConfirm)
		err := b.DecodeMessage(msg)
		m.ExchangeBody = &ExchangeFrame_Confirm{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ExchangeFrame_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ExchangeFrame)
	// exchangeBody
	switch x := m.ExchangeBody.(type) {
	case *ExchangeFrame_ChallengeRequest:
		s := proto.Size(x.ChallengeRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExchangeFrame_Challenge:
		s := proto.Size(x.Challenge)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExchangeFrame_ChallengeResponse:
		s := proto.Size(x.ChallengeResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExchangeFrame_Confirm:
		s := proto.Size(x.Confirm)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ExchangeFrame_ExchangeChallengeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExchangeFrame_ExchangeChallengeRequest) Reset() {
	*m = ExchangeFrame_ExchangeChallengeRequest{}
}
func (m *ExchangeFrame_ExchangeChallengeRequest) String() string { return proto.CompactTextString(m) }
func (*ExchangeFrame_ExchangeChallengeRequest) ProtoMessage()    {}
func (*ExchangeFrame_ExchangeChallengeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_exchange_ea5c62a9be27af46, []int{0, 0}
}
func (m *ExchangeFrame_ExchangeChallengeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallengeRequest.Unmarshal(m, b)
}
func (m *ExchangeFrame_ExchangeChallengeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallengeRequest.Marshal(b, m, deterministic)
}
func (dst *ExchangeFrame_ExchangeChallengeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeFrame_ExchangeChallengeRequest.Merge(dst, src)
}
func (m *ExchangeFrame_ExchangeChallengeRequest) XXX_Size() int {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallengeRequest.Size(m)
}
func (m *ExchangeFrame_ExchangeChallengeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeFrame_ExchangeChallengeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeFrame_ExchangeChallengeRequest proto.InternalMessageInfo

type ExchangeFrame_ExchangeChallenge struct {
	Token                []byte   `protobuf:"bytes,1,req,name=token" json:"token,omitempty"`
	Payload              []byte   `protobuf:"bytes,2,req,name=payload" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExchangeFrame_ExchangeChallenge) Reset()         { *m = ExchangeFrame_ExchangeChallenge{} }
func (m *ExchangeFrame_ExchangeChallenge) String() string { return proto.CompactTextString(m) }
func (*ExchangeFrame_ExchangeChallenge) ProtoMessage()    {}
func (*ExchangeFrame_ExchangeChallenge) Descriptor() ([]byte, []int) {
	return fileDescriptor_exchange_ea5c62a9be27af46, []int{0, 1}
}
func (m *ExchangeFrame_ExchangeChallenge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallenge.Unmarshal(m, b)
}
func (m *ExchangeFrame_ExchangeChallenge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallenge.Marshal(b, m, deterministic)
}
func (dst *ExchangeFrame_ExchangeChallenge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeFrame_ExchangeChallenge.Merge(dst, src)
}
func (m *ExchangeFrame_ExchangeChallenge) XXX_Size() int {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallenge.Size(m)
}
func (m *ExchangeFrame_ExchangeChallenge) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeFrame_ExchangeChallenge.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeFrame_ExchangeChallenge proto.InternalMessageInfo

func (m *ExchangeFrame_ExchangeChallenge) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *ExchangeFrame_ExchangeChallenge) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type ExchangeFrame_ExchangeChallenge_Payload struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExchangeFrame_ExchangeChallenge_Payload) Reset() {
	*m = ExchangeFrame_ExchangeChallenge_Payload{}
}
func (m *ExchangeFrame_ExchangeChallenge_Payload) String() string { return proto.CompactTextString(m) }
func (*ExchangeFrame_ExchangeChallenge_Payload) ProtoMessage()    {}
func (*ExchangeFrame_ExchangeChallenge_Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_exchange_ea5c62a9be27af46, []int{0, 1, 0}
}
func (m *ExchangeFrame_ExchangeChallenge_Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallenge_Payload.Unmarshal(m, b)
}
func (m *ExchangeFrame_ExchangeChallenge_Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallenge_Payload.Marshal(b, m, deterministic)
}
func (dst *ExchangeFrame_ExchangeChallenge_Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeFrame_ExchangeChallenge_Payload.Merge(dst, src)
}
func (m *ExchangeFrame_ExchangeChallenge_Payload) XXX_Size() int {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallenge_Payload.Size(m)
}
func (m *ExchangeFrame_ExchangeChallenge_Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeFrame_ExchangeChallenge_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeFrame_ExchangeChallenge_Payload proto.InternalMessageInfo

type ExchangeFrame_ExchangeChallengeResponse struct {
	Token                []byte   `protobuf:"bytes,1,req,name=token" json:"token,omitempty"`
	Nonce                []byte   `protobuf:"bytes,2,req,name=nonce" json:"nonce,omitempty"`
	Payload              []byte   `protobuf:"bytes,3,req,name=payload" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExchangeFrame_ExchangeChallengeResponse) Reset() {
	*m = ExchangeFrame_ExchangeChallengeResponse{}
}
func (m *ExchangeFrame_ExchangeChallengeResponse) String() string { return proto.CompactTextString(m) }
func (*ExchangeFrame_ExchangeChallengeResponse) ProtoMessage()    {}
func (*ExchangeFrame_ExchangeChallengeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_exchange_ea5c62a9be27af46, []int{0, 2}
}
func (m *ExchangeFrame_ExchangeChallengeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse.Unmarshal(m, b)
}
func (m *ExchangeFrame_ExchangeChallengeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse.Marshal(b, m, deterministic)
}
func (dst *ExchangeFrame_ExchangeChallengeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse.Merge(dst, src)
}
func (m *ExchangeFrame_ExchangeChallengeResponse) XXX_Size() int {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse.Size(m)
}
func (m *ExchangeFrame_ExchangeChallengeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse proto.InternalMessageInfo

func (m *ExchangeFrame_ExchangeChallengeResponse) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *ExchangeFrame_ExchangeChallengeResponse) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *ExchangeFrame_ExchangeChallengeResponse) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type ExchangeFrame_ExchangeChallengeResponse_Payload struct {
	PairKey    []byte `protobuf:"bytes,1,req,name=PairKey" json:"PairKey,omitempty"`
	ForceRelay *bool  `protobuf:"varint,2,opt,name=ForceRelay" json:"ForceRelay,omitempty"`
	// Types that are valid to be assigned to Intention:
	//	*ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOut
	//	*ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardTo
	//	*ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFrom
	Intention            isExchangeFrame_ExchangeChallengeResponse_Payload_Intention `protobuf_oneof:"intention"`
	XXX_NoUnkeyedLiteral struct{}                                                    `json:"-"`
	XXX_unrecognized     []byte                                                      `json:"-"`
	XXX_sizecache        int32                                                       `json:"-"`
}

func (m *ExchangeFrame_ExchangeChallengeResponse_Payload) Reset() {
	*m = ExchangeFrame_ExchangeChallengeResponse_Payload{}
}
func (m *ExchangeFrame_ExchangeChallengeResponse_Payload) String() string {
	return proto.CompactTextString(m)
}
func (*ExchangeFrame_ExchangeChallengeResponse_Payload) ProtoMessage() {}
func (*ExchangeFrame_ExchangeChallengeResponse_Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_exchange_ea5c62a9be27af46, []int{0, 2, 0}
}
func (m *ExchangeFrame_ExchangeChallengeResponse_Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload.Unmarshal(m, b)
}
func (m *ExchangeFrame_ExchangeChallengeResponse_Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload.Marshal(b, m, deterministic)
}
func (dst *ExchangeFrame_ExchangeChallengeResponse_Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload.Merge(dst, src)
}
func (m *ExchangeFrame_ExchangeChallengeResponse_Payload) XXX_Size() int {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload.Size(m)
}
func (m *ExchangeFrame_ExchangeChallengeResponse_Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload proto.InternalMessageInfo

func (m *ExchangeFrame_ExchangeChallengeResponse_Payload) GetPairKey() []byte {
	if m != nil {
		return m.PairKey
	}
	return nil
}

func (m *ExchangeFrame_ExchangeChallengeResponse_Payload) GetForceRelay() bool {
	if m != nil && m.ForceRelay != nil {
		return *m.ForceRelay
	}
	return false
}

type isExchangeFrame_ExchangeChallengeResponse_Payload_Intention interface {
	isExchangeFrame_ExchangeChallengeResponse_Payload_Intention()
}

type ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOut struct {
	PipeOut *ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail `protobuf:"bytes,3,opt,name=PipeOut,oneof"`
}

type ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardTo struct {
	PortForwardTo *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail `protobuf:"bytes,4,opt,name=portForwardTo,oneof"`
}

type ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFrom struct {
	PortForwardFrom *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail `protobuf:"bytes,5,opt,name=portForwardFrom,oneof"`
}

func (*ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOut) isExchangeFrame_ExchangeChallengeResponse_Payload_Intention() {
}

func (*ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardTo) isExchangeFrame_ExchangeChallengeResponse_Payload_Intention() {
}

func (*ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFrom) isExchangeFrame_ExchangeChallengeResponse_Payload_Intention() {
}

func (m *ExchangeFrame_ExchangeChallengeResponse_Payload) GetIntention() isExchangeFrame_ExchangeChallengeResponse_Payload_Intention {
	if m != nil {
		return m.Intention
	}
	return nil
}

func (m *ExchangeFrame_ExchangeChallengeResponse_Payload) GetPipeOut() *ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail {
	if x, ok := m.GetIntention().(*ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOut); ok {
		return x.PipeOut
	}
	return nil
}

func (m *ExchangeFrame_ExchangeChallengeResponse_Payload) GetPortForwardTo() *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail {
	if x, ok := m.GetIntention().(*ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardTo); ok {
		return x.PortForwardTo
	}
	return nil
}

func (m *ExchangeFrame_ExchangeChallengeResponse_Payload) GetPortForwardFrom() *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail {
	if x, ok := m.GetIntention().(*ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFrom); ok {
		return x.PortForwardFrom
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExchangeFrame_ExchangeChallengeResponse_Payload) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ExchangeFrame_ExchangeChallengeResponse_Payload_OneofMarshaler, _ExchangeFrame_ExchangeChallengeResponse_Payload_OneofUnmarshaler, _ExchangeFrame_ExchangeChallengeResponse_Payload_OneofSizer, []interface{}{
		(*ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOut)(nil),
		(*ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardTo)(nil),
		(*ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFrom)(nil),
	}
}

func _ExchangeFrame_ExchangeChallengeResponse_Payload_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExchangeFrame_ExchangeChallengeResponse_Payload)
	// intention
	switch x := m.Intention.(type) {
	case *ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOut:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PipeOut); err != nil {
			return err
		}
	case *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardTo:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PortForwardTo); err != nil {
			return err
		}
	case *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFrom:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PortForwardFrom); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ExchangeFrame_ExchangeChallengeResponse_Payload.Intention has unexpected type %T", x)
	}
	return nil
}

func _ExchangeFrame_ExchangeChallengeResponse_Payload_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExchangeFrame_ExchangeChallengeResponse_Payload)
	switch tag {
	case 3: // intention.PipeOut
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail)
		err := b.DecodeMessage(msg)
		m.Intention = &ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOut{msg}
		return true, err
	case 4: // intention.portForwardTo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail)
		err := b.DecodeMessage(msg)
		m.Intention = &ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardTo{msg}
		return true, err
	case 5: // intention.portForwardFrom
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail)
		err := b.DecodeMessage(msg)
		m.Intention = &ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFrom{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ExchangeFrame_ExchangeChallengeResponse_Payload_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ExchangeFrame_ExchangeChallengeResponse_Payload)
	// intention
	switch x := m.Intention.(type) {
	case *ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOut:
		s := proto.Size(x.PipeOut)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardTo:
		s := proto.Size(x.PortForwardTo)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFrom:
		s := proto.Size(x.PortForwardFrom)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail) Reset() {
	*m = ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail{}
}
func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail) String() string {
	return proto.CompactTextString(m)
}
func (*ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail) ProtoMessage() {}
func (*ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_exchange_ea5c62a9be27af46, []int{0, 2, 0, 0}
}
func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail.Unmarshal(m, b)
}
func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail.Marshal(b, m, deterministic)
}
func (dst *ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail.Merge(dst, src)
}
func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail) XXX_Size() int {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail.Size(m)
}
func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail proto.InternalMessageInfo

type ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail struct {
	DestIP               *string  `protobuf:"bytes,1,req,name=destIP" json:"destIP,omitempty"`
	DestPort             *uint32  `protobuf:"varint,2,req,name=destPort" json:"destPort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail) Reset() {
	*m = ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail{}
}
func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail) String() string {
	return proto.CompactTextString(m)
}
func (*ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail) ProtoMessage() {}
func (*ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_exchange_ea5c62a9be27af46, []int{0, 2, 0, 1}
}
func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail.Unmarshal(m, b)
}
func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail.Marshal(b, m, deterministic)
}
func (dst *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail.Merge(dst, src)
}
func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail) XXX_Size() int {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail.Size(m)
}
func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail proto.InternalMessageInfo

func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail) GetDestIP() string {
	if m != nil && m.DestIP != nil {
		return *m.DestIP
	}
	return ""
}

func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail) GetDestPort() uint32 {
	if m != nil && m.DestPort != nil {
		return *m.DestPort
	}
	return 0
}

type ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail struct {
	BindIP               *string  `protobuf:"bytes,1,req,name=bindIP" json:"bindIP,omitempty"`
	BindPort             *uint32  `protobuf:"varint,2,req,name=bindPort" json:"bindPort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail) Reset() {
	*m = ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail{}
}
func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail) String() string {
	return proto.CompactTextString(m)
}
func (*ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail) ProtoMessage() {}
func (*ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_exchange_ea5c62a9be27af46, []int{0, 2, 0, 2}
}
func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail.Unmarshal(m, b)
}
func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail.Marshal(b, m, deterministic)
}
func (dst *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail.Merge(dst, src)
}
func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail) XXX_Size() int {
	return xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail.Size(m)
}
func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail proto.InternalMessageInfo

func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail) GetBindIP() string {
	if m != nil && m.BindIP != nil {
		return *m.BindIP
	}
	return ""
}

func (m *ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail) GetBindPort() uint32 {
	if m != nil && m.BindPort != nil {
		return *m.BindPort
	}
	return 0
}

type ExchangeFrame_ExchangeConfirm struct {
	Token                []byte   `protobuf:"bytes,1,req,name=token" json:"token,omitempty"`
	Nonce                []byte   `protobuf:"bytes,2,req,name=nonce" json:"nonce,omitempty"`
	Payload              []byte   `protobuf:"bytes,3,req,name=payload" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExchangeFrame_ExchangeConfirm) Reset()         { *m = ExchangeFrame_ExchangeConfirm{} }
func (m *ExchangeFrame_ExchangeConfirm) String() string { return proto.CompactTextString(m) }
func (*ExchangeFrame_ExchangeConfirm) ProtoMessage()    {}
func (*ExchangeFrame_ExchangeConfirm) Descriptor() ([]byte, []int) {
	return fileDescriptor_exchange_ea5c62a9be27af46, []int{0, 3}
}
func (m *ExchangeFrame_ExchangeConfirm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeFrame_ExchangeConfirm.Unmarshal(m, b)
}
func (m *ExchangeFrame_ExchangeConfirm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeFrame_ExchangeConfirm.Marshal(b, m, deterministic)
}
func (dst *ExchangeFrame_ExchangeConfirm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeFrame_ExchangeConfirm.Merge(dst, src)
}
func (m *ExchangeFrame_ExchangeConfirm) XXX_Size() int {
	return xxx_messageInfo_ExchangeFrame_ExchangeConfirm.Size(m)
}
func (m *ExchangeFrame_ExchangeConfirm) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeFrame_ExchangeConfirm.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeFrame_ExchangeConfirm proto.InternalMessageInfo

func (m *ExchangeFrame_ExchangeConfirm) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *ExchangeFrame_ExchangeConfirm) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *ExchangeFrame_ExchangeConfirm) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type ExchangeFrame_ExchangeConfirm_Payload struct {
	Result  *bool   `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	Message *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// connection detail are followed
	Signature            []byte   `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
	Relay                *string  `protobuf:"bytes,4,opt,name=relay" json:"relay,omitempty"`
	PairID               *string  `protobuf:"bytes,5,opt,name=pairID" json:"pairID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExchangeFrame_ExchangeConfirm_Payload) Reset()         { *m = ExchangeFrame_ExchangeConfirm_Payload{} }
func (m *ExchangeFrame_ExchangeConfirm_Payload) String() string { return proto.CompactTextString(m) }
func (*ExchangeFrame_ExchangeConfirm_Payload) ProtoMessage()    {}
func (*ExchangeFrame_ExchangeConfirm_Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_exchange_ea5c62a9be27af46, []int{0, 3, 0}
}
func (m *ExchangeFrame_ExchangeConfirm_Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeFrame_ExchangeConfirm_Payload.Unmarshal(m, b)
}
func (m *ExchangeFrame_ExchangeConfirm_Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeFrame_ExchangeConfirm_Payload.Marshal(b, m, deterministic)
}
func (dst *ExchangeFrame_ExchangeConfirm_Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeFrame_ExchangeConfirm_Payload.Merge(dst, src)
}
func (m *ExchangeFrame_ExchangeConfirm_Payload) XXX_Size() int {
	return xxx_messageInfo_ExchangeFrame_ExchangeConfirm_Payload.Size(m)
}
func (m *ExchangeFrame_ExchangeConfirm_Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeFrame_ExchangeConfirm_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeFrame_ExchangeConfirm_Payload proto.InternalMessageInfo

func (m *ExchangeFrame_ExchangeConfirm_Payload) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ExchangeFrame_ExchangeConfirm_Payload) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ExchangeFrame_ExchangeConfirm_Payload) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *ExchangeFrame_ExchangeConfirm_Payload) GetRelay() string {
	if m != nil && m.Relay != nil {
		return *m.Relay
	}
	return ""
}

func (m *ExchangeFrame_ExchangeConfirm_Payload) GetPairID() string {
	if m != nil && m.PairID != nil {
		return *m.PairID
	}
	return ""
}

func init() {
	proto.RegisterType((*ExchangeFrame)(nil), "exchangestruct.ExchangeFrame")
	proto.RegisterType((*ExchangeFrame_ExchangeChallengeRequest)(nil), "exchangestruct.ExchangeFrame.ExchangeChallengeRequest")
	proto.RegisterType((*ExchangeFrame_ExchangeChallenge)(nil), "exchangestruct.ExchangeFrame.ExchangeChallenge")
	proto.RegisterType((*ExchangeFrame_ExchangeChallenge_Payload)(nil), "exchangestruct.ExchangeFrame.ExchangeChallenge.Payload")
	proto.RegisterType((*ExchangeFrame_ExchangeChallengeResponse)(nil), "exchangestruct.ExchangeFrame.ExchangeChallengeResponse")
	proto.RegisterType((*ExchangeFrame_ExchangeChallengeResponse_Payload)(nil), "exchangestruct.ExchangeFrame.ExchangeChallengeResponse.Payload")
	proto.RegisterType((*ExchangeFrame_ExchangeChallengeResponse_Payload_PipeOutDetail)(nil), "exchangestruct.ExchangeFrame.ExchangeChallengeResponse.Payload.PipeOutDetail")
	proto.RegisterType((*ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardToDetail)(nil), "exchangestruct.ExchangeFrame.ExchangeChallengeResponse.Payload.PortForwardToDetail")
	proto.RegisterType((*ExchangeFrame_ExchangeChallengeResponse_Payload_PortForwardFromDetail)(nil), "exchangestruct.ExchangeFrame.ExchangeChallengeResponse.Payload.PortForwardFromDetail")
	proto.RegisterType((*ExchangeFrame_ExchangeConfirm)(nil), "exchangestruct.ExchangeFrame.ExchangeConfirm")
	proto.RegisterType((*ExchangeFrame_ExchangeConfirm_Payload)(nil), "exchangestruct.ExchangeFrame.ExchangeConfirm.Payload")
}

func init() { proto.RegisterFile("exchange.proto", fileDescriptor_exchange_ea5c62a9be27af46) }

var fileDescriptor_exchange_ea5c62a9be27af46 = []byte{
	// 521 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xd1, 0x6e, 0x12, 0x41,
	0x14, 0x86, 0x59, 0x0a, 0x85, 0x3d, 0x40, 0xb1, 0x63, 0x6d, 0xd6, 0x8d, 0x31, 0x8d, 0x57, 0xbd,
	0x11, 0x13, 0x2f, 0xf4, 0x9e, 0x56, 0x02, 0x69, 0xb4, 0x64, 0xd4, 0x07, 0x18, 0xd9, 0x23, 0x9d,
	0xb8, 0xcc, 0xac, 0xb3, 0x43, 0x94, 0x78, 0xe5, 0x95, 0x6f, 0xe2, 0xbb, 0xf8, 0x18, 0x5e, 0xf8,
	0x1e, 0x66, 0x66, 0x67, 0x97, 0x5d, 0x28, 0x89, 0xb5, 0xbd, 0x9b, 0xff, 0xc0, 0xff, 0xfd, 0x87,
	0x39, 0x87, 0x81, 0x03, 0xfc, 0x3a, 0xbb, 0x62, 0x62, 0x8e, 0x83, 0x44, 0x49, 0x2d, 0x49, 0xa1,
	0x53, 0xad, 0x96, 0x33, 0xfd, 0xe4, 0x67, 0x07, 0x7a, 0xaf, 0x5c, 0x69, 0xa4, 0xd8, 0x02, 0x49,
	0x04, 0xf7, 0xce, 0xae, 0x58, 0x1c, 0xa3, 0x98, 0x23, 0xc5, 0xcf, 0x4b, 0x4c, 0x75, 0xe0, 0x9d,
	0x78, 0xa7, 0x9d, 0xe7, 0x2f, 0x06, 0x55, 0xf3, 0xa0, 0x62, 0x2c, 0xd4, 0xa6, 0x7b, 0x5c, 0xa3,
	0x5b, 0x44, 0x72, 0x09, 0x7e, 0x51, 0x0b, 0xea, 0x16, 0xff, 0xec, 0x86, 0xf8, 0x71, 0x8d, 0xae,
	0x19, 0x64, 0x0e, 0x87, 0xa5, 0x90, 0x34, 0x91, 0x22, 0xc5, 0x60, 0xcf, 0x82, 0x5f, 0xde, 0xb8,
	0xef, 0xcc, 0x3e, 0xae, 0xd1, 0x6d, 0x26, 0x99, 0x40, 0xeb, 0x4c, 0x8a, 0x8f, 0x5c, 0x2d, 0x82,
	0x86, 0xc5, 0x3f, 0xfd, 0x47, 0x7c, 0x66, 0x1a, 0xd7, 0x68, 0xee, 0x0f, 0x43, 0x08, 0x76, 0x5d,
	0x5a, 0xf8, 0x06, 0x0e, 0xb7, 0x3e, 0x23, 0x47, 0xd0, 0xd4, 0xf2, 0x13, 0x8a, 0xc0, 0x3b, 0xa9,
	0x9f, 0x76, 0x69, 0x26, 0x48, 0x00, 0xad, 0x84, 0xad, 0x62, 0xc9, 0xa2, 0xa0, 0x6e, 0xeb, 0xb9,
	0x0c, 0x7d, 0x68, 0x4d, 0xdd, 0xf1, 0x57, 0x13, 0x1e, 0xee, 0xfc, 0xa5, 0x3b, 0xc0, 0x47, 0xd0,
	0x14, 0x52, 0xcc, 0xd0, 0x61, 0x33, 0x51, 0x8e, 0xdb, 0xab, 0xc6, 0xfd, 0x69, 0x14, 0x79, 0xe6,
	0x5b, 0x53, 0xc6, 0xd5, 0x05, 0xae, 0x1c, 0x33, 0x97, 0xe4, 0x31, 0xc0, 0x48, 0xaa, 0x19, 0x52,
	0x8c, 0xd9, 0xca, 0xce, 0xbe, 0x4d, 0x4b, 0x15, 0xc2, 0xa1, 0x35, 0xe5, 0x09, 0x5e, 0x2e, 0xb5,
	0x9b, 0xdf, 0xeb, 0xff, 0x9c, 0xdf, 0xc0, 0xf5, 0x32, 0x70, 0xb8, 0x73, 0xd4, 0x8c, 0xc7, 0x66,
	0x00, 0xae, 0x40, 0xbe, 0x41, 0x2f, 0x91, 0x4a, 0x8f, 0xa4, 0xfa, 0xc2, 0x54, 0xf4, 0x4e, 0xba,
	0x89, 0xbe, 0xbd, 0x75, 0x60, 0x19, 0x5a, 0xc4, 0x56, 0xb3, 0xc8, 0x77, 0x0f, 0xfa, 0xa5, 0xca,
	0x48, 0xc9, 0x45, 0xd0, 0xb4, 0xf9, 0xef, 0xef, 0x30, 0xdf, 0x60, 0x8b, 0x0e, 0x36, 0xf3, 0xc2,
	0x3e, 0xf4, 0x2a, 0x97, 0x13, 0x4e, 0xe0, 0xfe, 0x35, 0xcd, 0x93, 0x63, 0xd8, 0x8f, 0x30, 0xd5,
	0x93, 0xa9, 0x1d, 0xa6, 0x4f, 0x9d, 0x22, 0x21, 0xb4, 0xcd, 0xc9, 0x58, 0xec, 0x92, 0xf4, 0x68,
	0xa1, 0xc3, 0x0b, 0x78, 0x70, 0x6d, 0x1f, 0x06, 0xf6, 0x81, 0x8b, 0x68, 0x0d, 0xcb, 0x94, 0x81,
	0x99, 0x53, 0x19, 0x96, 0xeb, 0x61, 0x07, 0x7c, 0x2e, 0x34, 0x0a, 0xcd, 0xa5, 0x08, 0x7f, 0x7b,
	0xd0, 0xdf, 0xf8, 0x5b, 0xdd, 0xd1, 0x06, 0xff, 0xf0, 0xd6, 0x1b, 0x7c, 0x0c, 0xfb, 0x0a, 0xd3,
	0x65, 0xac, 0x2d, 0xb2, 0x4d, 0x9d, 0x32, 0xee, 0x05, 0xa6, 0x29, 0x73, 0x0f, 0x97, 0x4f, 0x73,
	0x49, 0x1e, 0x81, 0x9f, 0xf2, 0xb9, 0x60, 0x7a, 0xa9, 0xb2, 0xb7, 0xa7, 0x4b, 0xd7, 0x05, 0xd3,
	0x8b, 0xb2, 0x2b, 0xdf, 0xb0, 0xae, 0x4c, 0x98, 0x94, 0x84, 0x71, 0x35, 0x39, 0xb7, 0xb3, 0xf7,
	0xa9, 0x53, 0xc3, 0x03, 0xe8, 0xe6, 0x4b, 0x30, 0x94, 0xd1, 0xea, 0x6f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x83, 0xc9, 0x28, 0x7f, 0xc9, 0x05, 0x00, 0x00,
}
