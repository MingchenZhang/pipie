syntax = "proto2";
package exchangestruct;

message ExchangeFrame {
    oneof exchangeBody{
        ExchangeChallengeRequest ChallengeRequest = 1;
        ExchangeChallenge Challenge = 2;
        ExchangeChallengeResponse ChallengeResponse = 3;
        ExchangeConfirm Confirm = 4;
    }

    message ExchangeChallengeRequest {
    }

    message ExchangeChallenge {
        required bytes token = 1;
        required bytes payload = 2;

        message Payload {
        }
    }

    message ExchangeChallengeResponse {
        required bytes token = 1;
        required bytes nonce = 2;
        required bytes payload = 3;

        message Payload {
            message PipeOutDetail {
            }

            message PortForwardToDetail {
                required string destIP = 1;
                required uint32 destPort = 2;
            }

            message PortForwardFromDetail {
                required string bindIP = 1;
                required uint32 bindPort = 2;
            }

            // pair key will be exchanged and mixed with user entered access key, produce final key for connection verification
            // pairing key is generated by client, as client usually has more entropy
            required bytes PairKey = 1;
            optional bool ForceRelay = 2;
            oneof intention {
                PipeOutDetail PipeOut = 3;
                PortForwardToDetail portForwardTo = 4;
                PortForwardFromDetail portForwardFrom = 5;
            }
        }
    }

    message ExchangeConfirm {
        required bytes token = 1;
        required bytes nonce = 2;
        required bytes payload = 3;

        message Payload {
            required bool result = 1;
            optional string message = 2;

            // connection detail are followed
            // signature is SHA256 hash of server certificate, sent to client for syncthing relaying
            optional bytes signature = 3;
            // URL of the relay used, chosen by server
            optional string relay = 4;
            // pairID used in pair connection
            optional string pairID = 5;
        }
    }
}
